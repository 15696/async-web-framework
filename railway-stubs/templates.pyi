import asyncio
import io
import pathlib
from .response import HTMLResponse
from typing import Any, Dict, Iterator, Optional, Union

class Context:
    regex: str = ...
    template: 'Template' = ...
    variables: Dict[str, Any] = ...
    def __init__(self, template: Template, kwargs: Dict[str, Any]) -> None: ...
    def findall(self, text: str) -> Iterator[str]: ...
    async def render(self) -> str: ...

class Template:
    path: str = ...
    fp: io.TextIOWrapper = ...
    loop: asyncio.AbstractEventLoop = ...
    def __init__(self, path: Union[str, pathlib.Path, Any], loop: Optional[asyncio.AbstractEventLoop]=...) -> None: ...
    async def read(self) -> str: ...

async def render(
    path: str, 
    __globals: Optional[Dict[str, Any]]=..., 
    __locals: Optional[Dict[str, Any]]=..., 
    **kwargs: Any
) -> HTMLResponse: ...
