from ._types import MaybeCoroFunc as MaybeCoroFunc
from .response import Response as Response
from typing import Any, Callable, Iterator, List, Optional, Tuple, Type

LOCALHOST: str
LOCALHOST_V6: str

async def maybe_coroutine(func: MaybeCoroFunc[Any], *args: Any, **kwargs: Any) -> Any: ...
def has_ipv6() -> bool: ...
def has_dualstack_ipv6() -> bool: ...
def is_ipv6(ip: str) -> bool: ...
def is_ipv4(ip: str) -> bool: ...
def validate_ip(ip: str=..., *, ipv6: bool=...) -> str: ...

class Deprecated:
    def __init__(self, func: Callable[..., Any]) -> None: ...
    def __bool__(self): ...

SETTING_ENV_PREFIX: str
VALID_METHODS: Tuple[str, ...]

def warn(message: str, category: Type[Warning]) -> Any: ...
def deprecated(other: Optional[str]=...) -> Any: ...
def jsonify(**kwargs: Any) -> Response: ...
def iter_headers(headers: bytes) -> Iterator[List[Any]]: ...
def find_headers(data: bytes) -> Tuple[Iterator[List[Any]], bytes]: ...
