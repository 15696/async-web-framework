from .response import HTTPResponse
from .sessions import HTTPSession
from socket import AddressFamily, SocketKind
from typing import Any, Dict, Optional, Tuple, Union

SSL_SCHEMES: Tuple[str, str]

class Hooker:
    session: HTTPSession = ...
    connected: bool = ...
    closed: bool = ...
    def __init__(self, session: HTTPSession) -> None: ...
    @property
    def loop(self): ...
    def ensure(self) -> None: ...
    def copy(self): ...
    def create_default_ssl_context(self): ...
    def parse_host(self, url: str) -> Any: ...
    async def read(self) -> bytes: ...
    async def write(self, data: Any) -> None: ...
    def build_request(self, method: str, host: str, path: str, headers: Dict[str, Any], body: Optional[str]) -> Any: ...
    async def build_response(self, data: Optional[bytes]=...) -> HTTPResponse: ...
    async def close(self) -> None: ...
