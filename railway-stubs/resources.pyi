from .injectables import Injectable, InjectableMeta
from .objects import Listener, Middleware, Route
from typing import Any, Dict, List, Tuple, Type

class ResourceMeta(InjectableMeta):
    def __new__(cls: Any, name: str, bases: Tuple[Type[Any]], attrs: Dict[str, Any], **kwargs: Any) -> Any: ...

class Resource(Injectable, metaclass=ResourceMeta):
    __resource_name__: str
    @property
    def name(self) -> str: ...
    @name.setter
    def name(self, value: Any) -> None: ...
    def routes(self) -> List[Route]: ...
    def middlewares(self) -> List[Middleware]: ...
    def listeners(self) -> List[Listener]: ...
