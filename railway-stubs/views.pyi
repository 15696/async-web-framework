from ._types import CoroFunc
from .objects import Route
from .router import Router
from typing import Any, Dict, List, Tuple, Type

class ViewMeta(type):
    __routes__: List[CoroFunc] = ...
    def __new__(cls: Any, name: str, bases: Tuple[Type[Any]], attrs: Dict[str, Any], **kwargs: Any) -> Any: ...

class HTTPView(metaclass=ViewMeta):
    __url_route__: str
    __routes__: List[CoroFunc]
    @property
    def url_route(self) -> str: ...
    def routes(self) -> List[CoroFunc]: ...
    def add_route(self, method: str, coro: CoroFunc) -> CoroFunc: ...
    def as_routes(self, router: Router, *, remove_routes: bool=...) -> List[Route]: ...
