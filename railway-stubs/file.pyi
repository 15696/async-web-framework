import io
import pathlib
from typing import TYPE_CHECKING, Any, List, Optional, Union, AsyncIterator

if TYPE_CHECKING:
    BytesLike = Union[bytes, bytearray, memoryview]

class File:
    fp: io.TextIOWrapper
    filename: str = ...
    def __init__(self, fp: Union[str, pathlib.Path, io.BytesIO, BytesLike], *, filename: Optional[str]=...) -> None: ...
    async def __aenter__(self): ...
    async def __aexit__(self, *args: Any) -> Any: ...
    def __aiter__(self) -> AsyncIterator[bytes]: ...
    def seek(self) -> None: ...
    async def save(self, name: str) -> Any: ...
    async def read(self) -> bytes: ...
    async def readlines(self) -> List[bytes]: ...
    async def stream(self) -> AsyncIterator[bytes]: ...
    async def close(self) -> None: ...
