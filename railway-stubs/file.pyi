import io
import pathlib
from typing import Any, AsyncGenerator, List, Optional, Union

class File:
    fp: io.TextIOWrapper
    filename: str = ...
    def __init__(self, fp: Union[str, pathlib.Path, io.BytesIO], *, filename: Optional[str]=...) -> None: ...
    async def __aenter__(self): ...
    async def __aexit__(self, *args: Any) -> Any: ...
    def __aiter__(self): ...
    async def save_as(self, name: str) -> Any: ...
    async def read(self) -> bytes: ...
    async def readlines(self) -> List[bytes]: ...
    async def stream(self) -> AsyncGenerator[bytes]: ...
    async def close(self) -> None: ...
