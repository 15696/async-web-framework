import datetime
from railway.objects import Route
from .app import Application
from .cookies import CookieJar
from .datastructures import URL
from .file import File
from .formdata import FormData
from .response import Response
from .responses import Redirection
from .server import ClientConnection
from .sessions import CookieSession
from .workers import Worker
from typing import Any, Dict, List, Optional, Tuple, Union

class Request:
    version: str = ...
    method: str = ...
    connection: ClientConnection = ...
    worker: Worker = ...
    headers: Dict[str, Any] = ...
    route: Route = ...
    created_at: datetime.datetime = ...
    def __init__(self, method: str, url: str, headers: Dict[str, str], version: str, body: Union[str, bytes], app: Application, connection: ClientConnection, worker: Worker, created_at: datetime.datetime) -> None: ...
    async def send(self, response: Union[str, bytes, Dict[str, Any], List[Any], Tuple[Any, Any], File, Response, Any]) -> None: ...
    async def close(self) -> None: ...
    def is_closed(self) -> bool: ...
    @property
    def app(self) -> Application: ...
    @property
    def url(self) -> URL: ...
    @property
    def cookies(self) -> Dict[str, str]: ...
    @property
    def cookie_jar(self) -> CookieJar: ...
    @property
    def session(self) -> CookieSession: ...
    @property
    def user_agent(self) -> str: ...
    @property
    def content_type(self) -> str: ...
    @property
    def host(self) -> str: ...
    @property
    def query(self) -> Dict[str, str]: ...
    @property
    def client_ip(self) -> str: ...
    @property
    def server_ip(self) -> str: ...
    def text(self) -> str: ...
    def json(self) -> Dict[str, Any]: ...
    def form(self) -> FormData: ...
    def redirect(self, to: str, *, body: Any=..., headers: Optional[Dict[str, Any]]=..., status: Optional[int]=..., content_type: Optional[str]=...) -> Redirection: ...
    @classmethod
    def parse(cls: Any, data: bytes, app: Application, connection: ClientConnection, worker: Worker, created_at: datetime.datetime) -> Request: ...
